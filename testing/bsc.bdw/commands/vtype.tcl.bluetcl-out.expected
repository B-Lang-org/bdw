Command: Bluetcl::bpackage load Test ClientServer
Test
ClientServer
GetPut
Connectable
ListN
Vector
Clocks
Array
List
Inout
FIFO
FIFOF
FIFOF_
Counter
PreludeBSV
Prelude
---------
Command: ::Virtual::createType xxx
::vVariable0
---------
xxx
Kind: Variable
Members
Width: -1
type:  xxx
const:  a
packages 
Command: ::Virtual::createType Tuple2
::vStruct0
---------
Tuple2
Kind: Struct
Members
tpl_1:  a
tpl_2:  b
Width: -1
type:  Tuple2
const:  Tuple2#(type a, type b)
packages 
Command: ::Virtual::createType Tuple2#(a,x)
::vStruct1
---------
Tuple2#(a,x)
Kind: Struct
Members
tpl_1:  a
tpl_2:  x
Width: -1
type:  Tuple2#(a,x)
const:  Tuple2#(type a, type b)
packages 
Command: ::Virtual::createType {Tuple2#(a, z)}
::vStruct2
---------
Tuple2#(a,z)
Kind: Struct
Members
tpl_1:  a
tpl_2:  z
Width: -1
type:  Tuple2#(a,z)
const:  Tuple2#(type a, type b)
packages 
Command: ::Virtual::createType {Tuple2#(bit, Bool)}
::vStruct3
---------
Tuple2#(bit,Bool)
Kind: Struct
Members
tpl_1:  Bit#(1)
tpl_2:  Bool
Width: 2
type:  Tuple2#(bit,Bool)
const:  Tuple2#(type a, type b)
packages 
Command: ::Virtual::createType {Tuple2#(bit, Bool)}
::vStruct4
---------
Tuple2#(bit,Bool)
Kind: Struct
Members
tpl_1:  Bit#(1)
tpl_2:  Bool
Width: 2
type:  Tuple2#(bit,Bool)
const:  Tuple2#(type a, type b)
packages 
Command: ::Virtual::createType T
::vAlias0
---------
Tuple2#(b,a)
Kind: Alias
Members
Width: -1
type:  T
const:  Test::T#(type a, type b)
packages Test
Command: ::Virtual::createType T#(t1,t2)
::vAlias1
---------
Tuple2#(t2,t1)
Kind: Alias
Members
Width: -1
type:  T#(t1,t2)
const:  Test::T#(type a, type b)
packages Test
Command: ::Virtual::createType T#(bit,int)
::vAlias2
---------
Tuple2#(Int#(32),Bit#(1))
Kind: Alias
Members
Width: 33
type:  T#(bit,int)
const:  Test::T#(type a, type b)
packages Test
Command: ::Virtual::createType Bar
::vEnum2
---------
Bar
Kind: Enum
Members
Red:  void
Yellow:  void
Blue:  void
Width: 2
type:  Bar
const:  Test::Bar
packages Test
Command: ::Virtual::createType Baz#(x,sz)
::vStruct8
---------
Baz#(x,sz)
Kind: Struct
Members
f1:  Bool
f2:  Bit#(sz)
v:  Vector::Vector#(sz,x)
Width: -1
type:  Baz#(x,sz)
const:  Test::Baz#(type t, numeric type n)
packages Test Vector
Command: ::Virtual::createType Baz#(Bool,34)
::vStruct9
---------
Baz#(Bool,34)
Kind: Struct
Members
f1:  Bool
f2:  Bit#(34)
v:  Vector::Vector#(34,Bool)
Width: 69
type:  Baz#(Bool,34)
const:  Test::Baz#(type t, numeric type n)
packages Test Vector
Command: ::Virtual::createType TopIFC
::vInterface0
---------
TopIFC
Kind: Interface
Members
f:  method Bool f (a x1, a x2)
clk_out:  Clock
rst_out:  Reset
g:  method Bool g (a x1)
s:  Test::SubIFC#(a)
Width: -1
type:  TopIFC
const:  Test::TopIFC#(type a)
packages Test
Command: ::Virtual::createType TopIFC#(xx)
::vInterface3
---------
TopIFC#(xx)
Kind: Interface
Members
f:  method Bool f (xx x1, xx x2)
clk_out:  Clock
rst_out:  Reset
g:  method Bool g (xx x1)
s:  Test::SubIFC#(xx)
Width: -1
type:  TopIFC#(xx)
const:  Test::TopIFC#(type a)
packages Test
Command: ::Virtual::createType TopIFC#(UInt#(7))
::vInterface6
---------
TopIFC#(UInt#(7))
Kind: Interface
Members
f:  method Bool f (UInt#(7) x1, UInt#(7) x2)
clk_out:  Clock
rst_out:  Reset
g:  method Bool g (UInt#(7) x1)
s:  Test::SubIFC#(UInt#(7))
Width: -1
type:  TopIFC#(UInt#(7))
const:  Test::TopIFC#(type a)
packages Test
Command: ::Virtual::createType SubIFC
::vInterface9
---------
SubIFC
Kind: Interface
Members
r:  Reg#(a)
Width: -1
type:  SubIFC
const:  Test::SubIFC#(type a)
packages Test
Command: ::Virtual::createType SubIFC#(xx)
::vInterface11
---------
SubIFC#(xx)
Kind: Interface
Members
r:  Reg#(xx)
Width: -1
type:  SubIFC#(xx)
const:  Test::SubIFC#(type a)
packages Test
Command: ::Virtual::createType SubIFC#(UInt#(7))
::vInterface13
---------
SubIFC#(UInt#(7))
Kind: Interface
Members
r:  Reg#(UInt#(7))
Width: -1
type:  SubIFC#(UInt#(7))
const:  Test::SubIFC#(type a)
packages Test
Command: ::Virtual::createType U
::vTaggedUnion0
---------
U
Kind: TaggedUnion
Members
F1:  void
F2:  a
F3:  List#(a)
F4:  function Bool f (Bool x1)
Width: -1
type:  U
const:  Test::U#(type a)
packages Test List
Command: ::Virtual::createType U#(xx)
::vTaggedUnion1
---------
U#(xx)
Kind: TaggedUnion
Members
F1:  void
F2:  xx
F3:  List#(xx)
F4:  function Bool f (Bool x1)
Width: -1
type:  U#(xx)
const:  Test::U#(type a)
packages Test List
Command: ::Virtual::createType U#(Bool)
::vTaggedUnion2
---------
U#(Bool)
Kind: TaggedUnion
Members
F1:  void
F2:  Bool
F3:  List#(Bool)
F4:  function Bool f (Bool x1)
Width: -1
type:  U#(Bool)
const:  Test::U#(type a)
packages Test List
Command: ::Virtual::createType U2
::vTaggedUnion3
---------
U2
Kind: TaggedUnion
Members
F1:  void
F2:  a
Width: -1
type:  U2
const:  Test::U2#(type a)
packages Test
Command: ::Virtual::createType U2#(xx)
::vTaggedUnion4
---------
U2#(xx)
Kind: TaggedUnion
Members
F1:  void
F2:  xx
Width: -1
type:  U2#(xx)
const:  Test::U2#(type a)
packages Test
Command: ::Virtual::createType U2#(Bool)
::vTaggedUnion5
---------
U2#(Bool)
Kind: TaggedUnion
Members
F1:  void
F2:  Bool
Width: 2
type:  U2#(Bool)
const:  Test::U2#(type a)
packages Test
Command: ::Virtual::createType Foo
::vInterface15
---------
Foo
Kind: Interface
Members
wset:  method Action wset (a x1)
wget:  method a wget ()
whas:  method Bool whas ()
io_out:  Inout#(Bool)
Width: -1
type:  Foo
const:  Test::Foo#(type a)
packages Test
Command: ::Virtual::createType Foo#(zz)
::vInterface16
---------
Foo#(zz)
Kind: Interface
Members
wset:  method Action wset (zz x1)
wget:  method zz wget ()
whas:  method Bool whas ()
io_out:  Inout#(Bool)
Width: -1
type:  Foo#(zz)
const:  Test::Foo#(type a)
packages Test
Command: ::Virtual::createType Foo#(int)
::vInterface17
---------
Foo#(int)
Kind: Interface
Members
wset:  method Action wset (Int#(32) x1)
wget:  method Int#(32) wget ()
whas:  method Bool whas ()
io_out:  Inout#(Bool)
Width: -1
type:  Foo#(int)
const:  Test::Foo#(type a)
packages Test
Command: ::Virtual::createType Arith
::vTypeclass0
---------
Arith
Kind: Typeclass
Members
+:  function a f (a x1, a x2)
-:  function a f (a x1, a x2)
negate:  function a f (a x1)
*:  function a f (a x1, a x2)
/:  function a f (a x1, a x2)
%:  function a f (a x1, a x2)
abs:  function a f (a x1)
signum:  function a f (a x1)
**:  function a f (a x1, a x2)
exp_e:  function a f (a x1)
log:  function a f (a x1)
logb:  function a f (a x1, a x2)
log2:  function a f (a x1)
log10:  function a f (a x1)
Width: -1
type:  Arith
const:  Arith#(type a)
packages 
Command: ::Virtual::createType {function int zzz(int x1, Bool x2, a x3)}
::vFunctionType17
---------
function int zzz (int x1, Bool x2, a x3)
Kind: Function
Members
Width: -1
type:  zzz
const:  
packages 
Command: ::Virtual::createType {function int strange(int x1, Bool x2, Tuple2#(a, int) x3)}
::vFunctionType18
---------
function int strange (int x1, Bool x2, Tuple2#(a,int) x3)
Kind: Function
Members
Width: -1
type:  strange
const:  
packages 
Command: ::Virtual::createType Get#(UInt#(4))
::vInterface18
---------
Get#(UInt#(4))
Kind: Interface
Members
get:  method ActionValue#(UInt#(4)) get ()
Width: -1
type:  Get#(UInt#(4))
const:  GetPut::Get#(type a)
packages GetPut
Command: ::Virtual::createType Put#(UInt#(5))
::vInterface19
---------
Put#(UInt#(5))
Kind: Interface
Members
put:  method Action put (UInt#(5) x1)
Width: -1
type:  Put#(UInt#(5))
const:  GetPut::Put#(type a)
packages GetPut
Command: ::Virtual::createType Action
::vAction10
---------
Action
Kind: Action
Members
Width: -1
type:  Action
const:  
packages 
Command: ::Virtual::createType ActionValue#(int)
::vActionValue1
---------
ActionValue#(int)
Kind: ActionValue
Members
Width: -1
type:  ActionValue#(int)
const:  
packages 
Command: ::Virtual::createType {Put#(Tuple2#(Bool, UInt#(65)))}
::vInterface20
---------
Put#(Tuple2#(Bool,UInt#(65)))
Kind: Interface
Members
put:  method Action put (Tuple2#(Bool,UInt#(65)) x1)
Width: -1
type:  Put#(Tuple2#(Bool,UInt#(65)))
const:  GetPut::Put#(type a)
packages GetPut
Command: ::Virtual::createType {Get#(Tuple2#(Bool, UInt#(65)))}
::vInterface21
---------
Get#(Tuple2#(Bool,UInt#(65)))
Kind: Interface
Members
get:  method ActionValue#(Tuple2#(Bool, UInt#(65))) get ()
Width: -1
type:  Get#(Tuple2#(Bool,UInt#(65)))
const:  GetPut::Get#(type a)
packages GetPut
Command: ::Virtual::createType {Tuple2#(Bar, List#(Bool))}
::vStruct13
---------
Tuple2#(Bar,List#(Bool))
Kind: Struct
Members
tpl_1:  Test::Bar
tpl_2:  List#(Bool)
Width: -1
type:  Tuple2#(Bar,List#(Bool))
const:  Tuple2#(type a, type b)
packages Test List
Command: ::Virtual::createType {Tuple2#(Bar, Put#(Bool))}
::vStruct14
---------
Tuple2#(Bar,Put#(Bool))
Kind: Struct
Members
tpl_1:  Test::Bar
tpl_2:  GetPut::Put#(Bool)
Width: -1
type:  Tuple2#(Bar,Put#(Bool))
const:  Tuple2#(type a, type b)
packages Test GetPut
Command: ::Virtual::createType {Tuple2#(Bar, FIFO#(Counter#(a)))}
::vStruct15
---------
Tuple2#(Bar,FIFO#(Counter#(a)))
Kind: Struct
Members
tpl_1:  Test::Bar
tpl_2:  FIFO::FIFO#(Counter::Counter#(a))
Width: -1
type:  Tuple2#(Bar,FIFO#(Counter#(a)))
const:  Tuple2#(type a, type b)
packages Test FIFO Counter
